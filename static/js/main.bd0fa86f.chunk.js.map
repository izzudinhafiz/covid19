{"version":3,"sources":["components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/NavBar/NavBar.jsx","components/SideBar/SideBar.jsx","TimeSeriesBody.js","sketches/P5Wrapper.js","sketches/components/Color.js","sketches/components/Plot.js","SketchBody.js","sketches/components/QuadTree.js","sketches/components/Person.js","sketches/components/Population.js","sketches/SimpleTransmission/SimpleTransmission.js","components/Article/Article.js","AnalysisBody.js","sketches/SocialDistancing/SocialDistancing.js","Sketch.js","App.js","index.js","components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","timeSeries","lastData","length","secondLast","displayData","deltaData","Date","date","toDateString","Grid","container","justify","spacing","item","xs","sm","Card","CardContent","Typography","color","className","styles","counter","variant","start","end","duration","separator","confirmedDelta","infected","recoveredDelta","deathsDelta","Chart","props","chartRef","React","createRef","state","windowWidth","window","innerWidth","addEventListener","setState","dailyData","this","myChart","Chartjs","current","type","labels","map","datasets","label","borderColor","fill","backgroundColor","options","maintainAspectRatio","scales","xAxes","ticks","fontSize","time","displayFormats","day","stepSize","yAxes","callback","value","index","values","order","Math","floor","log","unitName","update","id","ref","Component","globalUrl","fetchTotalData","country","a","axios","get","result","Object","keys","console","fetchDailyData","fetchURL","modifiedData","key","filter","fetchCountryData","iso3","searchString","forEach","concat","countries","name","alpha3Code","iso2","alpha2Code","element","indexOf","split","sort","b","fetchLocation","CountryPicker","handleCountryChange","useState","setCountries","location","setLocation","useEffect","fetchCountries","handleClick","selectElement","document","getElementById","buttonElement","innerText","gridContainer","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","handleSelect","Button","size","disableElevation","onClick","buttonLocation","useStyles","makeStyles","theme","appBar","transition","transitions","create","easing","sharp","leavingScreen","menuButton","marginRight","navLink","textDecoration","NavBar","handleOpen","classes","Fragment","AppBar","position","Toolbar","IconButton","edge","clsx","to","noWrap","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","SideBar","handleClose","open","useTheme","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","TimeSeriesBody","latestData","timeSeriesData","fetchedTotalData","fetchedTimeSeries","style","align","P5Wrapper","canvas","p5","sketch","wrapper","PropsHandler","newprops","remove","Recovered","Healthy","Infected","linePlot","p","offset","plotHeight","height","plotWidth","number","factorsArr","Array","i","x","scaleFactor","plotBar","array","maxCount","healthy","modifiedHealthy","modifiedRecovered","modifiedInfected","push","translate","scale","noStroke","x1","x2","i1","i2","h1","h2","r1","r2","multiplier","stroke","quad","pop","line","Plot","plot","disableFriendlyErrors","setup","min","createCanvas","draw","background","show","noLoop","SketchBody","updateData","Circle","y","diameter","pos","createVector","radius","point","sqrt","other","Rectangle","distanceX","abs","distanceY","noFill","circle","y1","y2","rectMode","CENTER","rect","QuadTree","boundary","capacity","points","childrens","contains","subdivide","insert","xOffset","yOffset","range","foundPoints","intersects","child","query","tempPoint","Person","probability","random","vel","mult","maxCounter","maxRange","probabilityConstant","probabilityInfected","infectedCounter","incubationPeriod","distSquare","distance","deltaX","deltaY","rotate","radians","add","strokeWeight","Population","people","person","updateVelocity","updateState","blipSize","SimpleTransmission","population","qtree","randomSeed","updateCount","boundingBox","neighbours","neighbour","infect","updatePeople","xc","yc","pointSize","textSize","text","Article","md","gutterBottom","paragraph","AnalysisBody","alignContent","marginTop","DistancingPerson","distancingFlag","deltaVel","seperationRange","agents","neighbourCount","velocity","agent","isClose","normalize","limit","SocialDistancing","seperation","Sketch","root","App","setOpen","handleDrawerOpen","handleDrawerClose","CssBaseline","path","exact","component","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.bd0fa86f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }, timeSeries }) => {\r\n  const lastData = timeSeries[timeSeries.length - 1];\r\n  const secondLast = timeSeries[timeSeries.length - 2];\r\n\r\n  const displayData = {\r\n    confirmed,\r\n    recovered,\r\n    deaths,\r\n    lastUpdate\r\n  };\r\n\r\n  const deltaData = {\r\n    confirmed,\r\n    recovered,\r\n    deaths\r\n  };\r\n\r\n  if (!confirmed) {\r\n    displayData.confirmed = 0;\r\n    displayData.recovered = 0;\r\n    displayData.deaths = 0;\r\n    displayData.lastUpdate = new Date().toDateString();\r\n\r\n    deltaData.confirmed = 0;\r\n    deltaData.recovered = 0;\r\n    deltaData.deaths = 0;\r\n  } else {\r\n    displayData.confirmed = lastData.confirmed;\r\n    displayData.recovered = lastData.recovered;\r\n    displayData.deaths = lastData.deaths;\r\n    displayData.lastUpdate = new Date(`${lastData.date}T12:00:00+00:00`).toDateString();\r\n    deltaData.confirmed = displayData.confirmed - secondLast.confirmed;\r\n    deltaData.recovered = displayData.recovered - secondLast.recovered;\r\n    deltaData.deaths = displayData.deaths - secondLast.deaths;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3}>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Infected</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.confirmed} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.confirmedDelta}>\r\n                +<CountUp start={0} end={deltaData.confirmed} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.infected}></div>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Recovered</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.recovered} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.recoveredDelta}>\r\n                +<CountUp start={0} end={deltaData.recovered} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.recovered}></div>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Deaths</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.deaths} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.deathsDelta}>\r\n                +<CountUp start={0} end={deltaData.deaths} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.deaths}></div>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Chart as Chartjs } from \"chart.js\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      windowWidth: window.innerWidth\r\n    };\r\n  }\r\n\r\n  chartRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", () => {\r\n      this.setState({ windowWidth: window.innerWidth });\r\n    });\r\n    const dailyData = this.props.data;\r\n\r\n    this.myChart = new Chartjs(this.chartRef.current, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: dailyData.map(({ date }) => {\r\n          return new Date();\r\n        }),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ recovered }) => recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        maintainAspectRatio: this.state.windowWidth <= 500 ? false : true,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: { fontSize: this.state.windowWidth <= 500 ? 10 : 12 },\r\n              type: \"time\",\r\n              time: {\r\n                displayFormats: {\r\n                  day: \"MMM DD\"\r\n                },\r\n                stepSize: this.state.windowWidth <= 500 ? 14 : 7\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                callback: (value, index, values) => {\r\n                  const units = [\"k\", \"M\", \"B\", \"T\"];\r\n                  const order = Math.floor(Math.log(values[0]) / Math.log(1000));\r\n\r\n                  if (order > 0) {\r\n                    const unitName = units[order - 1];\r\n                    return value / 1000 ** order + unitName;\r\n                  } else {\r\n                    return value;\r\n                  }\r\n                },\r\n                fontSize: this.state.windowWidth <= 500 ? 10 : 12\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const dailyData = this.props.data;\r\n    this.myChart.data.labels = dailyData.map(({ date }) => {\r\n      return new Date(date);\r\n    });\r\n    this.myChart.data.datasets[0].data = dailyData.map(({ confirmed }) => confirmed);\r\n    this.myChart.data.datasets[1].data = dailyData.map(({ recovered }) => recovered);\r\n    this.myChart.data.datasets[2].data = dailyData.map(({ deaths }) => deaths);\r\n\r\n    if (this.state.windowWidth <= 500) {\r\n      this.myChart.options.scales.yAxes[0].ticks.fontSize = 10;\r\n      this.myChart.options.maintainAspectRatio = false;\r\n      this.myChart.options.scales.xAxes[0].time.stepSize = 14;\r\n    } else {\r\n      this.myChart.options.scales.yAxes[0].ticks.fontSize = 12;\r\n      this.myChart.options.maintainAspectRatio = true;\r\n      this.myChart.options.scales.xAxes[0].time.stepSize = 7;\r\n    }\r\n    this.myChart.update();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <canvas id=\"myChart\" ref={this.chartRef}></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import axios from \"axios\";\r\n\r\nconst globalUrl = \"https://covidapi.info/api/v1/global\";\r\nconst countryUrl = \"https://covidapi.info/api/v1\";\r\n\r\nexport const fetchTotalData = async (country) => {\r\n  if (country) {\r\n    // Download individual country data\r\n    try {\r\n      const {\r\n        data: { result }\r\n      } = await axios.get(`${countryUrl}/country/${country}/latest`);\r\n\r\n      const lastUpdate = Object.keys(result)[0];\r\n      const { confirmed, deaths, recovered } = result[lastUpdate];\r\n\r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    //download global total data from API\r\n    try {\r\n      const {\r\n        data: {\r\n          date,\r\n          result: { confirmed, deaths, recovered }\r\n        }\r\n      } = await axios.get(globalUrl);\r\n      const lastUpdate = date;\r\n\r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  try {\r\n    let fetchURL;\r\n\r\n    if (country) {\r\n      fetchURL = `${countryUrl}/country/${country}`;\r\n    } else {\r\n      fetchURL = `${globalUrl}/count`;\r\n    }\r\n    const {\r\n      data: { result }\r\n    } = await axios.get(fetchURL);\r\n\r\n    const modifiedData = Object.keys(result).map(function (key, index) {\r\n      const { confirmed, deaths, recovered } = result[key];\r\n      return confirmed ? { confirmed, deaths, recovered, date: key } : null;\r\n    });\r\n\r\n    return modifiedData.filter((data) => data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountryData = async () => {\r\n  try {\r\n    const {\r\n      data: { result }\r\n    } = await axios.get(`${globalUrl}/latest`);\r\n    const iso3 = result.map((result) => Object.keys(result)[0]);\r\n\r\n    let searchString = \"https://restcountries.eu/rest/v2/alpha?codes=\";\r\n    iso3.forEach((country) => {\r\n      searchString = searchString.concat(country, \";\");\r\n    });\r\n\r\n    let { data: countries } = await axios.get(searchString);\r\n    countries = countries.filter((country) => country);\r\n\r\n    const modifiedData = countries.map((country) => {\r\n      return { name: country.name, iso3: country.alpha3Code, iso2: country.alpha2Code };\r\n    });\r\n\r\n    for (let index = 0; index < modifiedData.length; index++) {\r\n      const element = modifiedData[index];\r\n\r\n      if (element.name.indexOf(\"(\") > 0) {\r\n        element.name = element.name.split(\"(\")[0];\r\n      }\r\n\r\n      if (element.name.indexOf(\" and \") > 0) {\r\n        element.name = element.name.split(\" and \")[0];\r\n      }\r\n\r\n      if (element.name.indexOf(\",\") > 0) {\r\n        element.name = element.name.split(\",\")[0];\r\n      }\r\n\r\n      if (element.iso3 === \"GBR\") {\r\n        element.name = \"United Kingdom\";\r\n      } else if (element.iso3 === \"VNM\") {\r\n        element.name = \"Vietnam\";\r\n      } else if (element.iso3 === \"KOR\") {\r\n        element.name = \"South Korea\";\r\n      } else if (element.iso3 === \"LAO\") {\r\n        element.name = \"Laos\";\r\n      }\r\n    }\r\n\r\n    return modifiedData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchLocation = async () => {\r\n  try {\r\n    const {\r\n      data: { country }\r\n    } = await axios.get(\"https://ipinfo.io?token=b092506d1e5aeb\");\r\n    return country;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, NativeSelect, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { fetchCountryData, fetchLocation } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setCountries(await fetchCountryData());\r\n      setLocation(await fetchLocation());\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    const selectElement = document.getElementById(\"country-select\");\r\n    const buttonElement = document.getElementById(\"button-location\");\r\n\r\n    if (buttonElement.innerText !== \"GLOBAL\") {\r\n      const index = countries.map((country) => country.iso2).indexOf(location);\r\n      if (index !== -1) {\r\n        selectElement.value = countries[index].iso3;\r\n        buttonElement.innerText = \"Global\";\r\n      }\r\n    } else {\r\n      buttonElement.innerText = \"My Country\";\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    handleCountryChange(selectElement.value);\r\n  };\r\n\r\n  const handleSelect = (element) => {\r\n    const buttonElement = document.getElementById(\"button-location\");\r\n    handleCountryChange(element.target.value);\r\n\r\n    if (element.target.value !== \"\") {\r\n      buttonElement.innerText = \"Global\";\r\n    } else {\r\n      buttonElement.innerText = \"My Country\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1} className={styles.gridContainer}>\r\n      <Grid item>\r\n        <FormControl className={styles.formControl}>\r\n          <NativeSelect\r\n            id=\"country-select\"\r\n            defaultValue=\"\"\r\n            onChange={(e) => {\r\n              handleSelect(e);\r\n            }}\r\n          >\r\n            <option value=\"\">Global</option>\r\n            {countries\r\n              ? countries.map((country) => (\r\n                  <option key={country.name} value={country.iso3}>\r\n                    {country.name}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button id=\"button-location\" variant=\"contained\" size=\"small\" disableElevation color=\"primary\" onClick={handleClick} className={styles.buttonLocation}>\r\n          My Country\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  }\r\n}));\r\n\r\nexport default function NavBar({ handleOpen }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={handleOpen} edge=\"start\" className={clsx(classes.menuButton)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link className={classes.navLink} to=\"/\">\r\n            <Typography variant=\"h6\" noWrap>\r\n              COVID-19 Tracker\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem, Drawer, ListItemText, ListItemIcon, useTheme, makeStyles, Divider, IconButton, List } from \"@material-ui/core\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: 0,\r\n    flexShrink: 0\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  }\r\n}));\r\n\r\nexport default function SideBar({ handleClose, open }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleClose}>{theme.direction === \"ltr\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}</IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/\">\r\n            <ListItem button key={\"chart\"}>\r\n              <ListItemIcon>\r\n                <TimelineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Timeseries</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/analysis\">\r\n            <ListItem button key={\"analysis\"}>\r\n              <ListItemIcon>\r\n                <BubbleChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Articles</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/sketch\">\r\n            <ListItem button key={\"analysis\"}>\r\n              <ListItemIcon>\r\n                <BubbleChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Sketch</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchTotalData, fetchDailyData } from \"./api\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nclass TimeSeriesBody extends React.Component {\r\n  state = {\r\n    latestData: {},\r\n    timeSeriesData: [],\r\n    country: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedTotalData = await fetchTotalData();\r\n    const fetchedTimeSeries = await fetchDailyData(this.state.country);\r\n    this.setState({ latestData: fetchedTotalData, timeSeriesData: fetchedTimeSeries });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedTotalData = await fetchTotalData(country);\r\n    const fetchedTimeSeries = await fetchDailyData(country);\r\n    this.setState({ latestData: fetchedTotalData, country: country, timeSeriesData: fetchedTimeSeries });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"column\" alignItems=\"stretch\">\r\n        <Grid item style={{ padding: \"10px 0\" }}>\r\n          <Cards data={this.state.latestData} timeSeries={this.state.timeSeriesData} />\r\n        </Grid>\r\n        <Grid item style={{ padding: \"10px 0\" }}>\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        </Grid>\r\n        <Grid item align=\"center\" style={{ padding: \"10px 0\" }}>\r\n          <Chart data={this.state.timeSeriesData} country={this.state.country} />\r\n        </Grid>\r\n        <Grid item align=\"center\" style={{ padding: \"10px 0\" }}>\r\n          <Typography variant=\"caption\">Source: Johns Hopkins University, Center for Systems Science and Engineering (via covidapi.info)</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSeriesBody;\r\n","import React from \"react\";\r\nimport p5 from \"p5\";\r\n\r\nexport default class P5Wrapper extends React.Component {\r\n  componentDidMount() {\r\n    this.canvas = new p5(this.props.sketch, this.wrapper);\r\n\r\n    if (this.canvas.PropsHandler) {\r\n      this.canvas.PropsHandler(this.props);\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(newprops) {\r\n    if (this.props.sketch !== newprops.sketch) {\r\n      this.canvas.remove();\r\n      this.canvas = new p5(newprops.sketch, this.wrapper);\r\n    }\r\n    if (this.canvas.PropsHandler) {\r\n      this.canvas.PropsHandler(newprops);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.canvas) {\r\n      this.canvas.remove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div ref={(wrapper) => (this.wrapper = wrapper)}></div>;\r\n  }\r\n}\r\n","export const Recovered = {\r\n  r: 203,\r\n  g: 232,\r\n  b: 150,\r\n  hex: \"#CBE896\"\r\n};\r\n\r\nexport const Healthy = {\r\n  r: 0,\r\n  g: 39,\r\n  b: 43,\r\n  hex: \"#00272B\"\r\n};\r\n\r\nexport const Infected = {\r\n  r: 233,\r\n  g: 79,\r\n  b: 55,\r\n  hex: \"#E94F37\"\r\n};\r\n\r\nexport const Secondary = {\r\n  r: 57,\r\n  g: 62,\r\n  b: 65,\r\n  hex: \"#393E41\"\r\n};\r\n\r\nexport const Primary = {\r\n  r: 246,\r\n  g: 247,\r\n  b: 235,\r\n  hex: \"#F6F7EB\"\r\n};\r\n","import { Recovered, Infected, Healthy } from \"./Color\";\r\n\r\nconst factors = (number) => [...Array(number + 1).keys()].filter((i) => number % i === 0);\r\n\r\nclass linePlot {\r\n  constructor(sketch) {\r\n    this.p = sketch;\r\n    this.offset = 10;\r\n    this.plotHeight = this.p.height - this.offset * 2;\r\n    this.plotWidth = this.p.width - this.offset * 2;\r\n    let factorsArr = factors(this.plotWidth).filter((x) => x <= this.p.width);\r\n    this.scaleFactor = factorsArr[factorsArr.length - 1];\r\n    this.plotBar = this.plotWidth / this.scaleFactor;\r\n  }\r\n\r\n  plot(array, maxCount) {\r\n    let healthy = array.map((x) => x.healthy);\r\n    let infected = array.map((x) => x.infected);\r\n    let recovered = array.map((x) => x.recovered);\r\n    const p = this.p;\r\n\r\n    let modifiedHealthy = [];\r\n    let modifiedRecovered = [];\r\n    let modifiedInfected = [];\r\n\r\n    for (let x = 0; x < this.scaleFactor; x++) {\r\n      modifiedHealthy.push([]);\r\n      modifiedInfected.push([]);\r\n      modifiedRecovered.push([]);\r\n    }\r\n\r\n    const stepSize = healthy.length / this.scaleFactor;\r\n\r\n    for (let i = 0; i < modifiedHealthy.length; i++) {\r\n      modifiedHealthy[i] = healthy[Math.floor(i * stepSize)];\r\n      modifiedInfected[i] = infected[Math.floor(i * stepSize)];\r\n      modifiedRecovered[i] = recovered[Math.floor(i * stepSize)];\r\n    }\r\n\r\n    p.push();\r\n    p.translate(this.offset + 1, p.height - this.offset - 1);\r\n    p.scale(1, -1);\r\n    p.noStroke();\r\n    for (let i = 0; i < modifiedHealthy.length - 1; i++) {\r\n      let x1 = i * this.plotBar;\r\n      let x2 = i * this.plotBar + this.plotBar;\r\n\r\n      let i1 = modifiedInfected[i];\r\n      let i2 = modifiedInfected[i + 1];\r\n      let h1 = modifiedHealthy[i] + i1;\r\n      let h2 = modifiedHealthy[i + 1] + i2;\r\n      let r1 = modifiedRecovered[i] + h1;\r\n      let r2 = modifiedRecovered[i + 1] + h2;\r\n\r\n      let multiplier = (this.plotHeight * 0.9) / maxCount;\r\n      p.fill(Recovered.r, Recovered.g, Recovered.b);\r\n      p.stroke(Recovered.r, Recovered.g, Recovered.b);\r\n      p.quad(x1, 0, x2, 0, x2, r2 * multiplier, x1, r1 * multiplier);\r\n      p.fill(Healthy.r, Healthy.g, Healthy.b);\r\n      p.stroke(Healthy.r, Healthy.g, Healthy.b);\r\n      p.quad(x1, 0, x2, 0, x2, h2 * multiplier, x1, h1 * multiplier);\r\n      p.fill(Infected.r, Infected.g, Infected.b);\r\n      p.stroke(Infected.r, Infected.g, Infected.b);\r\n      p.quad(x1, 0, x2, 0, x2, i2 * multiplier, x1, i1 * multiplier);\r\n    }\r\n\r\n    p.pop();\r\n  }\r\n\r\n  show() {\r\n    const p = this.p;\r\n    p.push();\r\n    p.fill(0);\r\n    p.stroke(0);\r\n    p.translate(this.offset, p.height - this.offset);\r\n    p.scale(1, -1);\r\n    p.line(0, 0, 0, this.plotHeight);\r\n    p.line(0, 0, this.plotWidth, 0);\r\n\r\n    p.pop();\r\n  }\r\n}\r\n\r\nexport default function Plot(p) {\r\n  let size;\r\n  let data;\r\n  let plot;\r\n\r\n  p.disableFriendlyErrors = true;\r\n\r\n  p.PropsHandler = function (props) {\r\n    data = props.data;\r\n  };\r\n\r\n  p.setup = function () {\r\n    size = Math.floor(Math.min(p.windowWidth * 0.92, 400));\r\n    p.createCanvas(size, size / 3);\r\n    plot = new linePlot(p);\r\n  };\r\n\r\n  p.draw = function () {\r\n    let infected = data.map((x) => x.infected);\r\n    p.background(255);\r\n    plot.show();\r\n    plot.plot(data, 500);\r\n\r\n    if (infected[infected.length - 1] === 0) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport P5Wrapper from \"./sketches/P5Wrapper\";\r\nimport Plot from \"./sketches/components/Plot\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function SketchBody(props) {\r\n  const [state, setState] = useState([]);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item>\r\n        <P5Wrapper sketch={props.sketch} data={state} updateData={setState} />\r\n        <P5Wrapper sketch={Plot} data={state} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","export class Circle {\r\n  constructor(x, y, diameter, sketch) {\r\n    this.p = sketch;\r\n    this.pos = this.p.createVector(x, y);\r\n    this.radius = diameter / 2;\r\n    this.diameter = diameter;\r\n  }\r\n\r\n  contains(point) {\r\n    return Math.sqrt((point.pos.x - this.pos.x) ** 2 + (point.pos.y - this.pos.y) ** 2) <= this.radius;\r\n  }\r\n\r\n  intersects(other) {\r\n    if (other instanceof Rectangle) {\r\n      let distanceX = Math.abs(this.pos.x - other.pos.x);\r\n      let distanceY = Math.abs(this.pos.y - other.pos.y);\r\n\r\n      if (distanceX > other.width / 2 + this.radius) return false;\r\n      if (distanceY > other.height / 2 + this.radius) return false;\r\n\r\n      if (distanceX < other.width / 2) return true;\r\n      if (distanceY < other.height / 2) return true;\r\n\r\n      return (distanceX - other.width / 2) ** 2 + (distanceY - other.height / 2) ** 2 <= this.radius ** 2;\r\n    } else if (other instanceof Circle) {\r\n      let distance = Math.sqrt((other.pos.x - this.pos.x) ** 2 + (other.pos.y - this.pos.y) ** 2);\r\n\r\n      return distance <= other.radius + this.radius;\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.noFill();\r\n    this.p.stroke(255);\r\n    this.p.circle(this.pos.x, this.pos.y, this.diameter);\r\n    this.p.pop();\r\n  }\r\n}\r\n\r\nexport class Rectangle {\r\n  constructor(x, y, width, sketch) {\r\n    this.p = sketch;\r\n    this.pos = this.p.createVector(x, y);\r\n    this.width = width;\r\n    this.height = width;\r\n    this.x1 = this.pos.x - this.width / 2; //top left corner\r\n    this.y1 = this.pos.y - this.height / 2; //top left corner\r\n    this.x2 = this.pos.x + this.width / 2; //bottom right corner\r\n    this.y2 = this.pos.y + this.height / 2; //bottom right corner\r\n  }\r\n\r\n  contains(point) {\r\n    return point.pos.x <= this.x2 && point.pos.x >= this.x1 && point.pos.y <= this.y2 && point.pos.y >= this.y1;\r\n  }\r\n\r\n  intersects(other) {\r\n    if (other instanceof Rectangle) {\r\n      //If any Rectangle is completely to the left of the other\r\n      if (this.x1 >= other.x2 || other.x1 >= this.x2) return false;\r\n      //If any Rectangle is completely above the other\r\n      if (this.y1 >= other.y2 || other.y1 >= this.y2) return false;\r\n    } else if (other instanceof Circle) {\r\n      let distanceX = Math.abs(this.pos.x - other.pos.x);\r\n      let distanceY = Math.abs(this.pos.y - other.pos.y);\r\n\r\n      if (distanceX > this.width / 2 + other.radius) return false;\r\n      if (distanceY > this.height / 2 + other.radius) return false;\r\n\r\n      if (distanceX < this.width / 2) return true;\r\n      if (distanceY < this.height / 2) return true;\r\n\r\n      return (distanceX - this.width / 2) ** 2 + (distanceY - this.height / 2) ** 2 <= other.radius ** 2;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.noFill();\r\n    this.p.stroke(255);\r\n    this.p.rectMode(this.p.CENTER);\r\n    this.p.rect(this.pos.x, this.pos.y, this.width, this.height);\r\n    this.p.pop();\r\n  }\r\n}\r\n\r\nexport class QuadTree {\r\n  constructor(boundary, capacity, sketch) {\r\n    this.p = sketch;\r\n    this.boundary = boundary;\r\n    this.capacity = capacity;\r\n    this.points = [];\r\n    this.childrens = [];\r\n  }\r\n\r\n  insert(point) {\r\n    if (!this.boundary.contains(point)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.points.length < this.capacity && this.childrens.length === 0) {\r\n      this.points.push(point);\r\n      return true;\r\n    }\r\n\r\n    if (this.childrens.length === 0) {\r\n      this.subdivide();\r\n    }\r\n\r\n    if (this.childrens[0].insert(point)) return true;\r\n    if (this.childrens[1].insert(point)) return true;\r\n    if (this.childrens[2].insert(point)) return true;\r\n    if (this.childrens[3].insert(point)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  subdivide() {\r\n    if (this.childrens.length !== 0) return false;\r\n\r\n    const x = this.boundary.pos.x;\r\n    const y = this.boundary.pos.y;\r\n    const xOffset = this.boundary.width / 4;\r\n    const yOffset = this.boundary.height / 4;\r\n\r\n    this.childrens.push(new QuadTree(new Rectangle(x + xOffset, y - yOffset, xOffset * 2, this.p), this.capacity, this.p)); //NE\r\n    this.childrens.push(new QuadTree(new Rectangle(x + xOffset, y + yOffset, xOffset * 2, this.p), this.capacity, this.p)); //SE\r\n    this.childrens.push(new QuadTree(new Rectangle(x - xOffset, y + yOffset, xOffset * 2, this.p), this.capacity, this.p)); //SW\r\n    this.childrens.push(new QuadTree(new Rectangle(x - xOffset, y - yOffset, xOffset * 2, this.p), this.capacity, this.p)); //NW\r\n\r\n    return true;\r\n  }\r\n\r\n  query(range) {\r\n    let foundPoints = [];\r\n\r\n    if (!this.boundary.intersects(range)) {\r\n      return foundPoints;\r\n    }\r\n\r\n    this.points.forEach((point) => {\r\n      if (range.contains(point)) {\r\n        foundPoints.push(point);\r\n      }\r\n    });\r\n\r\n    if (this.childrens.length === 0) {\r\n      return foundPoints;\r\n    }\r\n\r\n    this.childrens.forEach((child) => {\r\n      let temp = child.query(range);\r\n      temp.forEach((tempPoint) => foundPoints.push(tempPoint));\r\n    });\r\n\r\n    return foundPoints;\r\n  }\r\n\r\n  show() {\r\n    if (this.childrens.length === 0) {\r\n      this.boundary.show();\r\n      return true;\r\n    }\r\n\r\n    this.childrens.forEach((child) => {\r\n      child.show();\r\n    });\r\n\r\n    return false;\r\n  }\r\n}\r\n","export class Person {\r\n  constructor(sketch, infected, range, probability) {\r\n    this.p = sketch;\r\n    this.counter = this.p.random(0, 100);\r\n    this.radius = this.p.width / 100 / 2;\r\n    this.size = this.radius * 2; //diameter\r\n    this.pos = this.p.createVector(this.p.random(0, this.p.width), this.p.random(0, this.p.height));\r\n    this.vel = this.p.createVector(this.p.random(-this.radius, this.radius), this.p.random(-this.radius, this.radius));\r\n    this.vel.mult(0.4);\r\n    this.maxCounter = 100;\r\n    this.maxRange = range || this.radius * 10;\r\n    this.probabilityConstant = 0.0018 * this.maxRange * this.maxRange - 0.123 * this.maxRange + 2.14;\r\n    this.probabilityInfected = probability || 0.02;\r\n    this.infected = infected || false;\r\n    this.infectedCounter = 0;\r\n    this.recovered = false;\r\n    this.incubationPeriod = 500;\r\n  }\r\n\r\n  edge() {\r\n    if (this.pos.x <= 0 || this.pos.x >= this.p.width) {\r\n      this.vel.x *= -1;\r\n    } else if (this.pos.y <= 0 || this.pos.y >= this.p.height) {\r\n      this.vel.y *= -1;\r\n    }\r\n  }\r\n\r\n  isClose(other) {\r\n    if (this === other) return false;\r\n    let distance = this.distSquare(this.pos, other.pos);\r\n    if (distance <= this.maxRange) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  infect(other) {\r\n    let distance = this.distSquare(this.pos, other.pos);\r\n    let probability = 1 / (1 + this.probabilityConstant * distance * distance);\r\n\r\n    if (Math.random() <= probability) {\r\n      if (!other.recovered) {\r\n        other.infected = true;\r\n      }\r\n      return other.infected;\r\n    }\r\n  }\r\n\r\n  // infect(other) {\r\n  //   if (Math.random() <= other.probabilityInfected) {\r\n  //     if (!other.recovered) {\r\n  //       other.infected = true;\r\n  //     }\r\n  //   }\r\n\r\n  //   return other.infected;\r\n  // }\r\n\r\n  distSquare(a, b) {\r\n    let deltaX = a.x - b.x;\r\n    let deltaY = a.y - b.y;\r\n\r\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n  }\r\n\r\n  updateVelocity() {\r\n    this.vel.rotate(this.p.radians(this.p.random(-10, 10)));\r\n    this.edge();\r\n  }\r\n\r\n  updateState() {\r\n    this.pos = this.pos.add(this.vel);\r\n\r\n    this.counter += 1;\r\n    if (this.counter >= this.maxCounter) {\r\n      this.counter = 0;\r\n    }\r\n    if (this.infected) {\r\n      this.infectedCounter += 1;\r\n      if (this.infectedCounter >= this.incubationPeriod) {\r\n        this.infected = false;\r\n        this.recovered = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.strokeWeight(this.size / 2);\r\n    if (!this.infected) {\r\n      this.p.stroke(93, 183, 164);\r\n    } else if (this.infected) {\r\n      this.p.stroke(193, 54, 63);\r\n    } else if (this.recovered) {\r\n      this.p.stroke(153, 210, 140);\r\n    }\r\n    this.p.point(this.pos);\r\n    this.p.pop();\r\n\r\n    if (this.infected) {\r\n      this.p.stroke(193, 54, 63);\r\n      this.p.noFill();\r\n      // let blipSize = this.p.map(this.counter, 0, this.maxCounter, 0, this.maxRange * 2);\r\n      this.p.circle(this.pos.x, this.pos.y, this.maxRange);\r\n    }\r\n  }\r\n}\r\n","import { Recovered, Infected, Healthy } from \"./Color\";\r\n\r\nexport class Population {\r\n  constructor(people, sketch) {\r\n    this.p = sketch;\r\n    this.people = people;\r\n    this.infected = this.people.filter((person) => person.infected);\r\n    this.healthy = this.people.filter((person) => !person.infected && !person.recovered);\r\n    this.recovered = this.people.filter((person) => person.recovered);\r\n  }\r\n\r\n  updatePeople() {\r\n    this.people.forEach((person) => {\r\n      person.updateVelocity();\r\n      person.updateState();\r\n    });\r\n  }\r\n\r\n  updateCount() {\r\n    this.infected = this.people.filter((person) => person.infected);\r\n    this.healthy = this.people.filter((person) => !person.infected && !person.recovered);\r\n    this.recovered = this.people.filter((person) => person.recovered);\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.strokeWeight(this.people[0].size <= 3 ? 3 : this.people[0].size);\r\n\r\n    this.p.stroke(Healthy.r, Healthy.g, Healthy.b);\r\n    this.healthy.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.stroke(Recovered.r, Recovered.g, Recovered.b);\r\n    this.recovered.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.stroke(Infected.r, Infected.g, Infected.b);\r\n    this.infected.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.strokeWeight(1);\r\n    this.p.stroke(Infected.r, Infected.g, Infected.b);\r\n    this.p.noFill();\r\n    this.infected.forEach((person) => {\r\n      // let blipSize = Math.\r\n      let blipSize = this.p.map(person.counter, 0, person.maxCounter, 0, person.maxRange);\r\n      this.p.circle(person.pos.x, person.pos.y, blipSize);\r\n    });\r\n\r\n    this.p.pop();\r\n  }\r\n}\r\n","import { Rectangle, QuadTree, Circle } from \"../components/QuadTree\";\r\nimport { Person } from \"../components/Person\";\r\nimport { Population } from \"../components/Population\";\r\nimport { Recovered, Infected, Healthy } from \"../components/Color\";\r\n\r\nexport default function SimpleTransmission(p) {\r\n  let people = [];\r\n  let population;\r\n  let size;\r\n  let qtree;\r\n  let data;\r\n  let updateState;\r\n\r\n  p.disableFriendlyErrors = true;\r\n\r\n  function updateData(population) {\r\n    if (data) {\r\n      updateState([\r\n        ...data,\r\n        {\r\n          healthy: population.healthy.length,\r\n          infected: population.infected.length,\r\n          recovered: population.recovered.length\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  p.PropsHandler = function (props) {\r\n    data = props.data;\r\n    updateState = props.updateData;\r\n  };\r\n\r\n  p.setup = function () {\r\n    size = Math.floor(Math.min(p.windowWidth * 0.92, 400));\r\n\r\n    p.createCanvas(size, size);\r\n    p.randomSeed(92);\r\n    for (let i = 1; i < 500; i++) {\r\n      people.push(new Person(p, false));\r\n    }\r\n    people.push(new Person(p, true));\r\n    population = new Population(people, p);\r\n    population.updateCount();\r\n\r\n    updateData(population);\r\n    console.log(population.people[0].maxRange);\r\n  };\r\n\r\n  p.draw = function () {\r\n    p.background(255);\r\n    p.stroke(0);\r\n    p.noFill();\r\n    p.strokeWeight(1);\r\n    p.rect(0, 0, p.width, p.height);\r\n\r\n    qtree = new QuadTree(new Rectangle(p.width / 2, p.height / 2, p.width, p), 4, p);\r\n\r\n    population.healthy.forEach((person) => qtree.insert(person));\r\n\r\n    population.infected.forEach((person) => {\r\n      let boundingBox = new Circle(person.pos.x, person.pos.y, person.maxRange, p);\r\n      let neighbours = qtree.query(boundingBox);\r\n\r\n      if (neighbours.length !== 0) {\r\n        neighbours.forEach((neighbour) => {\r\n          person.infect(neighbour);\r\n        });\r\n      }\r\n    });\r\n\r\n    population.updatePeople();\r\n    population.updateCount();\r\n    updateData(population);\r\n    population.show();\r\n\r\n    p.push();\r\n    const xc = Math.floor(p.width * 0.01);\r\n    const yc = Math.floor(p.height * 0.01);\r\n    const fontSize = Math.floor(p.height * 0.03);\r\n    const yOffset = Math.floor(fontSize * 1.3);\r\n    const xOffset = fontSize * 3;\r\n    const pointSize = Math.floor(fontSize * 0.75);\r\n    p.fill(200, 200, 200, 200);\r\n    p.rect(xc, yc, fontSize * 10, yOffset * 3.5, p.width * 0.01);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.4);\r\n    p.textSize(fontSize);\r\n    p.text(\"Susceptible\", xc + xOffset, yc + yOffset);\r\n    p.text(\"Infectious\", xc + xOffset, yc + yOffset * 2);\r\n    p.text(\"Recovered\", xc + xOffset, yc + yOffset * 3);\r\n\r\n    p.strokeWeight(pointSize);\r\n    p.stroke(Healthy.r, Healthy.g, Healthy.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset - pointSize / 2);\r\n    p.stroke(Infected.r, Infected.g, Infected.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 2 - pointSize / 2);\r\n    p.stroke(Recovered.r, Recovered.g, Recovered.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 3 - pointSize / 2);\r\n    p.pop();\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Divider, Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport SketchBody from \"../../SketchBody\";\r\nimport SimpleTransmission from \"../../sketches/SimpleTransmission/SimpleTransmission\";\r\n\r\nexport function Article(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={7}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              How a Virus Spreads\r\n            </Typography>\r\n            <Divider />\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              Epidemiologist models how viruses spread to people using a Susceptible, Infectious & Recovered (SIR) Model. In this model, we have three groups of\r\n              people:\r\n            </Typography>\r\n            <ul>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Susceptible: Healthy people who have not been infected by a virus\r\n                </Typography>\r\n              </li>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Infectious: People who are already infected by a virus\r\n                </Typography>\r\n              </li>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Recovered: People who were infected and now has either recovered or -unfortunately- died\r\n                </Typography>\r\n              </li>\r\n            </ul>\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              The SIR models has three interactions. (1) Susceptible people interact with infectious people and have a chance to contract the disease. (2)\r\n              Infectious people will slowly recover, the rate at which they recover is dependant on the level of medical care available. Lastly (3) Recovered\r\n              people can no longer transmit the disease because they have gained immunity against the disease.\r\n            </Typography>\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              Below we have a simple simulation of a disease spreading in a population with no mitigating factors at all. We can see how quickly the disease\r\n              spreads to the whole population.\r\n            </Typography>\r\n            <SketchBody sketch={SimpleTransmission} />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Article } from \"./components/Article/Article\";\r\n\r\nexport default function AnalysisBody() {\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"center\" style={{ marginTop: \"5px\" }} spacing={3}>\r\n      <Article />\r\n    </Grid>\r\n  );\r\n}\r\n","import { Rectangle, QuadTree, Circle } from \"../components/QuadTree\";\r\nimport { Person } from \"../components/Person\";\r\nimport { Population } from \"../components/Population\";\r\nimport { Recovered, Infected, Healthy } from \"../components/Color\";\r\n\r\nclass DistancingPerson extends Person {\r\n  constructor(sketch, infected, range, probability) {\r\n    super(sketch, infected, range, probability);\r\n    this.distancingFlag = false;\r\n    this.deltaVel = this.p.createVector();\r\n    this.seperationRange = this.size * 5.5;\r\n  }\r\n\r\n  seperation(agents) {\r\n    let neighbourCount = 0;\r\n    let velocity = this.p.createVector(0, 0);\r\n    if (agents) {\r\n      agents.forEach((agent) => {\r\n        if (this.isClose(agent)) {\r\n          velocity.x += agent.pos.x - this.pos.x;\r\n          velocity.y += agent.pos.y - this.pos.y;\r\n          neighbourCount++;\r\n        }\r\n      });\r\n    }\r\n\r\n    if (neighbourCount !== 0) {\r\n      velocity.x /= neighbourCount;\r\n      velocity.y /= neighbourCount;\r\n    }\r\n\r\n    velocity.x *= -1;\r\n    velocity.y *= -1;\r\n    velocity = velocity.normalize();\r\n\r\n    this.deltaVel = velocity;\r\n  }\r\n\r\n  updateVelocity() {\r\n    if (this.distancingFlag) {\r\n      this.vel.x += this.deltaVel.x;\r\n      this.vel.y += this.deltaVel.y;\r\n      // this.vel.normalize();\r\n      this.vel.limit(this.radius * 0.5);\r\n    } else {\r\n      this.vel.rotate(this.p.radians(this.p.random(-10, 10)));\r\n    }\r\n    this.edge();\r\n  }\r\n}\r\n\r\nexport default function SocialDistancing(p) {\r\n  let people = [];\r\n  let population;\r\n  let size;\r\n  let qtree;\r\n  let data;\r\n  let updateState;\r\n\r\n  p.disableFriendlyErrors = true;\r\n\r\n  function updateData(population) {\r\n    if (data) {\r\n      updateState([\r\n        ...data,\r\n        {\r\n          healthy: population.healthy.length,\r\n          infected: population.infected.length,\r\n          recovered: population.recovered.length\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  p.PropsHandler = function (props) {\r\n    data = props.data;\r\n    updateState = props.updateData;\r\n  };\r\n\r\n  p.setup = function () {\r\n    size = Math.floor(Math.min(p.windowWidth * 0.92, 400));\r\n    p.createCanvas(size, size);\r\n    p.randomSeed(92);\r\n    for (let i = 1; i < 500; i++) {\r\n      people.push(new DistancingPerson(p, false));\r\n    }\r\n    people.push(new DistancingPerson(p, true));\r\n    population = new Population(people, p);\r\n    population.updateCount();\r\n\r\n    updateData(population);\r\n  };\r\n\r\n  p.draw = function () {\r\n    p.background(255);\r\n    p.stroke(0);\r\n    p.strokeWeight(1);\r\n    p.noFill();\r\n    p.rect(0, 0, p.width, p.height);\r\n\r\n    qtree = new QuadTree(new Rectangle(p.width / 2, p.height / 2, p.width, p), 4, p);\r\n\r\n    population.people.forEach((person) => qtree.insert(person));\r\n\r\n    population.people.forEach((person) => {\r\n      if (!person.distancingFlag && population.infected.length >= 200) {\r\n        person.distancingFlag = true;\r\n      } else if (person.distancingFlag && population.infected.length <= 0) {\r\n        person.distancingFlag = false;\r\n        person.vel = p.createVector(p.random(-person.radius, person.radius), p.random(-person.radius, person.radius));\r\n        person.vel.mult(0.4);\r\n      }\r\n      let boundingBox = new Circle(person.pos.x, person.pos.y, person.seperationRange, p);\r\n      let neighbours = qtree.query(boundingBox);\r\n      person.seperation(neighbours);\r\n\r\n      boundingBox = new Circle(person.pos.x, person.pos.y, person.maxRange, p);\r\n      neighbours = qtree.query(boundingBox);\r\n\r\n      if (person.infected) {\r\n        if (neighbours.length !== 0) {\r\n          neighbours.forEach((neighbour) => {\r\n            person.infect(neighbour);\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    population.updatePeople();\r\n\r\n    population.updateCount();\r\n    updateData(population);\r\n    population.show();\r\n\r\n    p.push();\r\n    const xc = Math.floor(p.width * 0.01);\r\n    const yc = Math.floor(p.height * 0.01);\r\n    const fontSize = Math.floor(p.height * 0.03);\r\n    const yOffset = Math.floor(fontSize * 1.3);\r\n    const xOffset = fontSize * 3;\r\n    const pointSize = Math.floor(fontSize * 0.75);\r\n    p.fill(200, 200, 200, 200);\r\n    p.rect(xc, yc, fontSize * 10, yOffset * 3.5, p.width * 0.01);\r\n\r\n    p.fill(0);\r\n    p.strokeWeight(0.4);\r\n    p.textSize(fontSize);\r\n    p.text(\"Susceptible\", xc + xOffset, yc + yOffset);\r\n    p.text(\"Infectious\", xc + xOffset, yc + yOffset * 2);\r\n    p.text(\"Recovered\", xc + xOffset, yc + yOffset * 3);\r\n\r\n    p.strokeWeight(pointSize);\r\n    p.stroke(Healthy.r, Healthy.g, Healthy.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset - pointSize / 2);\r\n    p.stroke(Infected.r, Infected.g, Infected.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 2 - pointSize / 2);\r\n    p.stroke(Recovered.r, Recovered.g, Recovered.b);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 3 - pointSize / 2);\r\n    p.pop();\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport SketchBody from \"./SketchBody\";\r\nimport SocialDistancing from \"./sketches/SocialDistancing/SocialDistancing\";\r\n\r\nexport default function Sketch(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={7}>\r\n        <Card>\r\n          <CardContent>\r\n            <SketchBody sketch={SocialDistancing} />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TimeSeriesBody from \"./TimeSeriesBody\";\r\nimport AnalysisBody from \"./AnalysisBody\";\r\nimport Sketch from \"./Sketch\";\r\nimport { NavBar, SideBar } from \"./components\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { makeStyles, CssBaseline } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <NavBar handleOpen={handleDrawerOpen} handleClose={handleDrawerClose} open={open} />\r\n        <SideBar handleOpen={handleDrawerOpen} handleClose={handleDrawerClose} open={open} />\r\n\r\n        <main style={{ width: \"100%\", backgroundColor: \"rgb(240,240,240)\" }} onClick={open ? handleDrawerClose : null}>\r\n          <div className={classes.drawerHeader} />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={TimeSeriesBody} />\r\n            <Route path=\"/analysis\" component={AnalysisBody} />\r\n            <Route path=\"/sketch\" component={Sketch} size={100} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infected\":\"Cards_infected__MaZs5\",\"recovered\":\"Cards_recovered__2EChl\",\"deaths\":\"Cards_deaths__guyns\",\"counter\":\"Cards_counter__1dl8E\",\"confirmedDelta\":\"Cards_confirmedDelta__3Mvqg\",\"recoveredDelta\":\"Cards_recoveredDelta__10T_e\",\"deathsDelta\":\"Cards_deathsDelta__2DGH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"CountryPicker_gridContainer__3GS8J\",\"buttonLocation\":\"CountryPicker_buttonLocation__22lws\",\"formControl\":\"CountryPicker_formControl__26lxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__31DQU\"};"],"sourceRoot":""}