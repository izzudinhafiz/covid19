{"version":3,"sources":["components/Cards/Cards.jsx","components/Chart/Chart.jsx","api/index.js","components/CountryPicker/CountryPicker.jsx","components/NavBar/NavBar.jsx","components/SideBar/SideBar.jsx","TimeSeriesBody.js","sketches/P5Wrapper.js","sketches/components/QuadTree.js","sketches/components/Person.js","sketches/components/Population.js","sketches/SimpleTransmission/SimpleTransmission.js","sketches/components/Plot.js","SketchBody.js","components/Article/Article.js","AnalysisBody.js","App.js","index.js","components/Cards/Cards.module.css","components/CountryPicker/CountryPicker.module.css","components/Chart/Chart.module.css"],"names":["Cards","data","confirmed","recovered","deaths","lastUpdate","timeSeries","lastData","length","secondLast","displayData","deltaData","Date","date","toDateString","Grid","container","justify","spacing","item","xs","sm","Card","CardContent","Typography","color","className","styles","counter","variant","start","end","duration","separator","confirmedDelta","infected","recoveredDelta","deathsDelta","Chart","props","chartRef","React","createRef","state","windowWidth","window","innerWidth","addEventListener","setState","dailyData","this","myChart","Chartjs","current","type","labels","map","datasets","label","borderColor","fill","backgroundColor","options","maintainAspectRatio","scales","xAxes","ticks","fontSize","time","displayFormats","day","stepSize","yAxes","callback","value","index","values","order","Math","floor","log","unitName","update","id","ref","Component","globalUrl","fetchTotalData","country","a","axios","get","result","Object","keys","console","fetchDailyData","fetchURL","modifiedData","key","filter","fetchCountryData","iso3","searchString","forEach","concat","countries","name","alpha3Code","iso2","alpha2Code","element","indexOf","split","sort","b","fetchLocation","CountryPicker","handleCountryChange","useState","setCountries","location","setLocation","useEffect","fetchCountries","handleClick","selectElement","document","getElementById","buttonElement","innerText","gridContainer","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","handleSelect","Button","size","disableElevation","onClick","buttonLocation","useStyles","makeStyles","theme","appBar","transition","transitions","create","easing","sharp","leavingScreen","menuButton","marginRight","navLink","textDecoration","NavBar","handleOpen","classes","Fragment","AppBar","position","Toolbar","IconButton","edge","clsx","to","noWrap","drawer","width","flexShrink","drawerPaper","drawerHeader","display","alignItems","padding","mixins","toolbar","justifyContent","SideBar","handleClose","open","useTheme","Drawer","anchor","paper","direction","Divider","List","ListItem","button","ListItemIcon","ListItemText","TimeSeriesBody","latestData","timeSeriesData","fetchedTotalData","fetchedTimeSeries","style","align","P5Wrapper","canvas","p5","sketch","wrapper","PropsHandler","newprops","remove","Rectangle","x","y","p","pos","createVector","height","x1","y1","x2","y2","point","other","push","noFill","stroke","rectMode","CENTER","rect","pop","QuadTree","boundary","capacity","points","childrens","contains","subdivide","insert","xOffset","yOffset","range","foundPoints","intersects","child","query","tempPoint","show","Person","random","radius","vel","maxCounter","maxRange","probabilityInfected","infectedCounter","distSquare","infect","deltaX","deltaY","sqrt","limit","add","strokeWeight","blipSize","ellipse","Population","people","person","healthy","circle","SimpleTransmission","population","qtree","updateState","updateData","disableFriendlyErrors","setup","min","createCanvas","randomSeed","i","updateCount","draw","background","boundingBox","neighbours","neighbour","isClose","updatePeople","xc","yc","pointSize","textSize","text","linePlot","count","offset","plotHeight","plotWidth","plotBar","array","maxCount","translate","scale","quad","line","Plot","plot","noLoop","SketchBody","simpleTransmission","sketchMobile","Article","md","gutterBottom","paragraph","AnalysisBody","alignContent","marginTop","root","App","setOpen","handleDrawerOpen","handleDrawerClose","CssBaseline","path","exact","component","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.104855ed.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate }, timeSeries }) => {\r\n  const lastData = timeSeries[timeSeries.length - 1];\r\n  const secondLast = timeSeries[timeSeries.length - 2];\r\n\r\n  const displayData = {\r\n    confirmed,\r\n    recovered,\r\n    deaths,\r\n    lastUpdate\r\n  };\r\n\r\n  const deltaData = {\r\n    confirmed,\r\n    recovered,\r\n    deaths\r\n  };\r\n\r\n  if (!confirmed) {\r\n    displayData.confirmed = 0;\r\n    displayData.recovered = 0;\r\n    displayData.deaths = 0;\r\n    displayData.lastUpdate = new Date().toDateString();\r\n\r\n    deltaData.confirmed = 0;\r\n    deltaData.recovered = 0;\r\n    deltaData.deaths = 0;\r\n  } else {\r\n    displayData.confirmed = lastData.confirmed;\r\n    displayData.recovered = lastData.recovered;\r\n    displayData.deaths = lastData.deaths;\r\n    displayData.lastUpdate = new Date(`${lastData.date}T12:00:00+00:00`).toDateString();\r\n    deltaData.confirmed = displayData.confirmed - secondLast.confirmed;\r\n    deltaData.recovered = displayData.recovered - secondLast.recovered;\r\n    deltaData.deaths = displayData.deaths - secondLast.deaths;\r\n  }\r\n\r\n  return (\r\n    <Grid container justify=\"center\" spacing={3}>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Infected</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.confirmed} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.confirmedDelta}>\r\n                +<CountUp start={0} end={deltaData.confirmed} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.infected}></div>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Recovered</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.recovered} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.recoveredDelta}>\r\n                +<CountUp start={0} end={deltaData.recovered} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.recovered}></div>\r\n        </Card>\r\n      </Grid>\r\n      <Grid item xs={8} sm={3}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\">Deaths</Typography>\r\n            <div className={styles.counter}>\r\n              <Typography variant=\"h6\">\r\n                <CountUp start={0} end={displayData.deaths} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"subtitle1\" className={styles.deathsDelta}>\r\n                +<CountUp start={0} end={deltaData.deaths} duration={0.5} separator=\",\" />\r\n              </Typography>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"caption\">\r\n              Updated: {displayData.lastUpdate}\r\n            </Typography>\r\n          </CardContent>\r\n          <div className={styles.deaths}></div>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { Chart as Chartjs } from \"chart.js\";\r\n\r\nimport styles from \"./Chart.module.css\";\r\n\r\nclass Chart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      windowWidth: window.innerWidth\r\n    };\r\n  }\r\n\r\n  chartRef = React.createRef();\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", () => {\r\n      this.setState({ windowWidth: window.innerWidth });\r\n    });\r\n    const dailyData = this.props.data;\r\n\r\n    this.myChart = new Chartjs(this.chartRef.current, {\r\n      type: \"line\",\r\n      data: {\r\n        labels: dailyData.map(({ date }) => {\r\n          return new Date();\r\n        }),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ recovered }) => recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: true\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true\r\n          }\r\n        ]\r\n      },\r\n      options: {\r\n        maintainAspectRatio: this.state.windowWidth <= 500 ? false : true,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              ticks: { fontSize: this.state.windowWidth <= 500 ? 10 : 12 },\r\n              type: \"time\",\r\n              time: {\r\n                displayFormats: {\r\n                  day: \"MMM DD\"\r\n                },\r\n                stepSize: this.state.windowWidth <= 500 ? 14 : 7\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                callback: (value, index, values) => {\r\n                  const units = [\"k\", \"M\", \"B\", \"T\"];\r\n                  const order = Math.floor(Math.log(values[0]) / Math.log(1000));\r\n\r\n                  if (order > 0) {\r\n                    const unitName = units[order - 1];\r\n                    return value / 1000 ** order + unitName;\r\n                  } else {\r\n                    return value;\r\n                  }\r\n                },\r\n                fontSize: this.state.windowWidth <= 500 ? 10 : 12\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    const dailyData = this.props.data;\r\n    this.myChart.data.labels = dailyData.map(({ date }) => {\r\n      return new Date(date);\r\n    });\r\n    this.myChart.data.datasets[0].data = dailyData.map(({ confirmed }) => confirmed);\r\n    this.myChart.data.datasets[1].data = dailyData.map(({ recovered }) => recovered);\r\n    this.myChart.data.datasets[2].data = dailyData.map(({ deaths }) => deaths);\r\n\r\n    if (this.state.windowWidth <= 500) {\r\n      this.myChart.options.scales.yAxes[0].ticks.fontSize = 10;\r\n      this.myChart.options.maintainAspectRatio = false;\r\n      this.myChart.options.scales.xAxes[0].time.stepSize = 14;\r\n    } else {\r\n      this.myChart.options.scales.yAxes[0].ticks.fontSize = 12;\r\n      this.myChart.options.maintainAspectRatio = true;\r\n      this.myChart.options.scales.xAxes[0].time.stepSize = 7;\r\n    }\r\n    this.myChart.update();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <canvas id=\"myChart\" ref={this.chartRef}></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chart;\r\n","import axios from \"axios\";\r\n\r\nconst globalUrl = \"https://covidapi.info/api/v1/global\";\r\nconst countryUrl = \"https://covidapi.info/api/v1\";\r\n\r\nexport const fetchTotalData = async (country) => {\r\n  if (country) {\r\n    // Download individual country data\r\n    try {\r\n      const {\r\n        data: { result }\r\n      } = await axios.get(`${countryUrl}/country/${country}/latest`);\r\n\r\n      const lastUpdate = Object.keys(result)[0];\r\n      const { confirmed, deaths, recovered } = result[lastUpdate];\r\n\r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  } else {\r\n    //download global total data from API\r\n    try {\r\n      const {\r\n        data: {\r\n          date,\r\n          result: { confirmed, deaths, recovered }\r\n        }\r\n      } = await axios.get(globalUrl);\r\n      const lastUpdate = date;\r\n\r\n      return { confirmed, recovered, deaths, lastUpdate };\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n};\r\n\r\nexport const fetchDailyData = async (country) => {\r\n  try {\r\n    let fetchURL;\r\n\r\n    if (country) {\r\n      fetchURL = `${countryUrl}/country/${country}`;\r\n    } else {\r\n      fetchURL = `${globalUrl}/count`;\r\n    }\r\n    const {\r\n      data: { result }\r\n    } = await axios.get(fetchURL);\r\n\r\n    const modifiedData = Object.keys(result).map(function (key, index) {\r\n      const { confirmed, deaths, recovered } = result[key];\r\n      return confirmed ? { confirmed, deaths, recovered, date: key } : null;\r\n    });\r\n\r\n    return modifiedData.filter((data) => data);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchCountryData = async () => {\r\n  try {\r\n    const {\r\n      data: { result }\r\n    } = await axios.get(`${globalUrl}/latest`);\r\n    const iso3 = result.map((result) => Object.keys(result)[0]);\r\n\r\n    let searchString = \"https://restcountries.eu/rest/v2/alpha?codes=\";\r\n    iso3.forEach((country) => {\r\n      searchString = searchString.concat(country, \";\");\r\n    });\r\n\r\n    let { data: countries } = await axios.get(searchString);\r\n    countries = countries.filter((country) => country);\r\n\r\n    const modifiedData = countries.map((country) => {\r\n      return { name: country.name, iso3: country.alpha3Code, iso2: country.alpha2Code };\r\n    });\r\n\r\n    for (let index = 0; index < modifiedData.length; index++) {\r\n      const element = modifiedData[index];\r\n\r\n      if (element.name.indexOf(\"(\") > 0) {\r\n        element.name = element.name.split(\"(\")[0];\r\n      }\r\n\r\n      if (element.name.indexOf(\" and \") > 0) {\r\n        element.name = element.name.split(\" and \")[0];\r\n      }\r\n\r\n      if (element.name.indexOf(\",\") > 0) {\r\n        element.name = element.name.split(\",\")[0];\r\n      }\r\n\r\n      if (element.iso3 === \"GBR\") {\r\n        element.name = \"United Kingdom\";\r\n      } else if (element.iso3 === \"VNM\") {\r\n        element.name = \"Vietnam\";\r\n      } else if (element.iso3 === \"KOR\") {\r\n        element.name = \"South Korea\";\r\n      } else if (element.iso3 === \"LAO\") {\r\n        element.name = \"Laos\";\r\n      }\r\n    }\r\n\r\n    return modifiedData.sort((a, b) => (a.name > b.name ? 1 : -1));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchLocation = async () => {\r\n  try {\r\n    const {\r\n      data: { country }\r\n    } = await axios.get(\"https://ipinfo.io?token=b092506d1e5aeb\");\r\n    return country;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { FormControl, NativeSelect, Grid, Button } from \"@material-ui/core\";\r\n\r\nimport { fetchCountryData, fetchLocation } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [location, setLocation] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    const fetchCountries = async () => {\r\n      setCountries(await fetchCountryData());\r\n      setLocation(await fetchLocation());\r\n    };\r\n\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleClick = async () => {\r\n    const selectElement = document.getElementById(\"country-select\");\r\n    const buttonElement = document.getElementById(\"button-location\");\r\n\r\n    if (buttonElement.innerText !== \"GLOBAL\") {\r\n      const index = countries.map((country) => country.iso2).indexOf(location);\r\n      if (index !== -1) {\r\n        selectElement.value = countries[index].iso3;\r\n        buttonElement.innerText = \"Global\";\r\n      }\r\n    } else {\r\n      buttonElement.innerText = \"My Country\";\r\n      selectElement.value = \"\";\r\n    }\r\n\r\n    handleCountryChange(selectElement.value);\r\n  };\r\n\r\n  const handleSelect = (element) => {\r\n    const buttonElement = document.getElementById(\"button-location\");\r\n    handleCountryChange(element.target.value);\r\n\r\n    if (element.target.value !== \"\") {\r\n      buttonElement.innerText = \"Global\";\r\n    } else {\r\n      buttonElement.innerText = \"My Country\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={1} className={styles.gridContainer}>\r\n      <Grid item>\r\n        <FormControl className={styles.formControl}>\r\n          <NativeSelect\r\n            id=\"country-select\"\r\n            defaultValue=\"\"\r\n            onChange={(e) => {\r\n              handleSelect(e);\r\n            }}\r\n          >\r\n            <option value=\"\">Global</option>\r\n            {countries\r\n              ? countries.map((country) => (\r\n                  <option key={country.name} value={country.iso3}>\r\n                    {country.name}\r\n                  </option>\r\n                ))\r\n              : null}\r\n          </NativeSelect>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item>\r\n        <Button id=\"button-location\" variant=\"contained\" size=\"small\" disableElevation color=\"primary\" onClick={handleClick} className={styles.buttonLocation}>\r\n          My Country\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { AppBar, Toolbar, IconButton, Typography, makeStyles } from \"@material-ui/core\";\r\nimport clsx from \"clsx\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  }\r\n}));\r\n\r\nexport default function NavBar({ handleOpen }) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AppBar position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton color=\"inherit\" onClick={handleOpen} edge=\"start\" className={clsx(classes.menuButton)}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Link className={classes.navLink} to=\"/\">\r\n            <Typography variant=\"h6\" noWrap>\r\n              COVID-19 Tracker\r\n            </Typography>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { ListItem, Drawer, ListItemText, ListItemIcon, useTheme, makeStyles, Divider, IconButton, List } from \"@material-ui/core\";\r\nimport TimelineIcon from \"@material-ui/icons/Timeline\";\r\nimport BubbleChartIcon from \"@material-ui/icons/BubbleChart\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst drawerWidth = 220;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: 0,\r\n    flexShrink: 0\r\n  },\r\n\r\n  drawerPaper: {\r\n    width: drawerWidth\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  },\r\n\r\n  navLink: {\r\n    textDecoration: \"none\",\r\n    color: \"inherit\"\r\n  }\r\n}));\r\n\r\nexport default function SideBar({ handleClose, open }) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleClose}>{theme.direction === \"ltr\" ? <ChevronLeftIcon /> : <ChevronRightIcon />}</IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/\">\r\n            <ListItem button key={\"chart\"}>\r\n              <ListItemIcon>\r\n                <TimelineIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Timeseries</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/analysis\">\r\n            <ListItem button key={\"analysis\"}>\r\n              <ListItemIcon>\r\n                <BubbleChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Articles</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n          <Link className={classes.navLink} onClick={handleClose} to=\"/sketch\">\r\n            <ListItem button key={\"analysis\"}>\r\n              <ListItemIcon>\r\n                <BubbleChartIcon />\r\n              </ListItemIcon>\r\n              <ListItemText>Sketch</ListItemText>\r\n            </ListItem>\r\n          </Link>\r\n        </List>\r\n      </Drawer>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchTotalData, fetchDailyData } from \"./api\";\r\nimport { Grid, Typography } from \"@material-ui/core\";\r\n\r\nclass TimeSeriesBody extends React.Component {\r\n  state = {\r\n    latestData: {},\r\n    timeSeriesData: [],\r\n    country: \"\"\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const fetchedTotalData = await fetchTotalData();\r\n    const fetchedTimeSeries = await fetchDailyData(this.state.country);\r\n    this.setState({ latestData: fetchedTotalData, timeSeriesData: fetchedTimeSeries });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedTotalData = await fetchTotalData(country);\r\n    const fetchedTimeSeries = await fetchDailyData(country);\r\n    this.setState({ latestData: fetchedTotalData, country: country, timeSeriesData: fetchedTimeSeries });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid container direction=\"column\" alignItems=\"stretch\">\r\n        <Grid item style={{ padding: \"10px 0\" }}>\r\n          <Cards data={this.state.latestData} timeSeries={this.state.timeSeriesData} />\r\n        </Grid>\r\n        <Grid item style={{ padding: \"10px 0\" }}>\r\n          <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        </Grid>\r\n        <Grid item align=\"center\" style={{ padding: \"10px 0\" }}>\r\n          <Chart data={this.state.timeSeriesData} country={this.state.country} />\r\n        </Grid>\r\n        <Grid item align=\"center\" style={{ padding: \"10px 0\" }}>\r\n          <Typography variant=\"caption\">Source: Johns Hopkins University, Center for Systems Science and Engineering (via covidapi.info)</Typography>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TimeSeriesBody;\r\n","import React from \"react\";\r\nimport p5 from \"p5\";\r\n\r\nexport default class P5Wrapper extends React.Component {\r\n  componentDidMount() {\r\n    this.canvas = new p5(this.props.sketch, this.wrapper);\r\n\r\n    if (this.canvas.PropsHandler) {\r\n      this.canvas.PropsHandler(this.props);\r\n    }\r\n  }\r\n\r\n  UNSAFE_componentWillReceiveProps(newprops) {\r\n    if (this.props.sketch !== newprops.sketch) {\r\n      this.canvas.remove();\r\n      this.canvas = new p5(newprops.sketch, this.wrapper);\r\n    }\r\n    if (this.canvas.PropsHandler) {\r\n      this.canvas.PropsHandler(newprops);\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.canvas) {\r\n      this.canvas.remove();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <div ref={(wrapper) => (this.wrapper = wrapper)}></div>;\r\n  }\r\n}\r\n","export class Rectangle {\r\n  constructor(x, y, width, sketch) {\r\n    this.p = sketch;\r\n    this.pos = this.p.createVector(x, y);\r\n    this.width = width;\r\n    this.height = width;\r\n    this.x1 = this.pos.x - this.width / 2; //top left corner\r\n    this.y1 = this.pos.y - this.height / 2; //top left corner\r\n    this.x2 = this.pos.x + this.width / 2; //bottom right corner\r\n    this.y2 = this.pos.y + this.height / 2; //bottom right corner\r\n  }\r\n\r\n  contains(point) {\r\n    return point.pos.x <= this.x2 && point.pos.x >= this.x1 && point.pos.y <= this.y2 && point.pos.y >= this.y1;\r\n  }\r\n\r\n  intersects(other) {\r\n    //If any Rectangle is completely to the left of the other\r\n    if (this.x1 >= other.x2 || other.x1 >= this.x2) return false;\r\n    //If any Rectangle is completely above the other\r\n    if (this.y1 >= other.y2 || other.y1 >= this.y2) return false;\r\n\r\n    return true;\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.noFill();\r\n    this.p.stroke(255);\r\n    this.p.rectMode(this.p.CENTER);\r\n    this.p.rect(this.pos.x, this.pos.y, this.width, this.height);\r\n    this.p.pop();\r\n  }\r\n}\r\n\r\nexport class QuadTree {\r\n  constructor(boundary, capacity, sketch) {\r\n    this.p = sketch;\r\n    this.boundary = boundary;\r\n    this.capacity = capacity;\r\n    this.points = [];\r\n    this.childrens = [];\r\n  }\r\n\r\n  insert(point) {\r\n    if (!this.boundary.contains(point)) {\r\n      return false;\r\n    }\r\n\r\n    if (this.points.length < this.capacity && this.childrens.length === 0) {\r\n      this.points.push(point);\r\n      return true;\r\n    }\r\n\r\n    if (this.childrens.length === 0) {\r\n      this.subdivide();\r\n    }\r\n\r\n    if (this.childrens[0].insert(point)) return true;\r\n    if (this.childrens[1].insert(point)) return true;\r\n    if (this.childrens[2].insert(point)) return true;\r\n    if (this.childrens[3].insert(point)) return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  subdivide() {\r\n    if (this.childrens.length !== 0) return false;\r\n\r\n    const x = this.boundary.pos.x;\r\n    const y = this.boundary.pos.y;\r\n    const xOffset = this.boundary.width / 4;\r\n    const yOffset = this.boundary.height / 4;\r\n\r\n    this.childrens.push(new QuadTree(new Rectangle(x + xOffset, y - yOffset, xOffset * 2, this.p), this.capacity, this.p)); //NE\r\n    this.childrens.push(new QuadTree(new Rectangle(x + xOffset, y + yOffset, xOffset * 2, this.p), this.capacity, this.p)); //SE\r\n    this.childrens.push(new QuadTree(new Rectangle(x - xOffset, y + yOffset, xOffset * 2, this.p), this.capacity, this.p)); //SW\r\n    this.childrens.push(new QuadTree(new Rectangle(x - xOffset, y - yOffset, xOffset * 2, this.p), this.capacity, this.p)); //NW\r\n\r\n    return true;\r\n  }\r\n\r\n  query(range) {\r\n    let foundPoints = [];\r\n\r\n    if (!this.boundary.intersects(range)) {\r\n      return foundPoints;\r\n    }\r\n\r\n    this.points.forEach((point) => {\r\n      if (range.contains(point)) {\r\n        foundPoints.push(point);\r\n      }\r\n    });\r\n\r\n    if (this.childrens.length === 0) {\r\n      return foundPoints;\r\n    }\r\n\r\n    this.childrens.forEach((child) => {\r\n      let temp = child.query(range);\r\n      temp.forEach((tempPoint) => foundPoints.push(tempPoint));\r\n    });\r\n\r\n    return foundPoints;\r\n  }\r\n\r\n  show() {\r\n    if (this.childrens.length === 0) {\r\n      this.boundary.show();\r\n      return true;\r\n    }\r\n\r\n    this.childrens.forEach((child) => {\r\n      child.show();\r\n    });\r\n\r\n    return false;\r\n  }\r\n}\r\n","const incubationPeriod = 500;\r\n\r\nexport class Person {\r\n  constructor(sketch, infected) {\r\n    this.p = sketch;\r\n    this.counter = this.p.random(0, 100);\r\n    this.radius = this.p.width / 100 / 2;\r\n    this.size = this.radius * 2; //diameter\r\n    this.pos = this.p.createVector(this.p.random(0, this.p.width), this.p.random(0, this.p.height));\r\n    this.vel = this.p.createVector(this.p.random(-this.radius, this.radius), this.p.random(-this.radius, this.radius));\r\n    this.maxCounter = 100;\r\n    this.maxRange = this.radius * 8;\r\n    this.probabilityInfected = 0.2;\r\n    this.infected = infected || false;\r\n    this.infectedCounter = 0;\r\n    this.recovered = false;\r\n  }\r\n\r\n  edge() {\r\n    if (this.pos.x <= 0 || this.pos.x >= this.p.width) {\r\n      this.vel.x *= -1;\r\n    } else if (this.pos.y <= 0 || this.pos.y >= this.p.height) {\r\n      this.vel.y *= -1;\r\n    }\r\n  }\r\n\r\n  isClose(other) {\r\n    if (this.infected && this !== other) {\r\n      let distance = this.distSquare(this.pos, other.pos);\r\n      if (distance <= this.maxRange) {\r\n        if (Math.random() <= this.probabilityInfected) {\r\n          other.infect();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  infect() {\r\n    if (!this.recovered) {\r\n      this.infected = true;\r\n    }\r\n\r\n    return this.infected;\r\n  }\r\n\r\n  distSquare(a, b) {\r\n    let deltaX = a.x - b.x;\r\n    let deltaY = a.y - b.y;\r\n\r\n    return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\r\n  }\r\n\r\n  update() {\r\n    this.vel.x += ((Math.random() * 2 - 1) * this.radius) / 5;\r\n    this.vel.y += ((Math.random() * 2 - 1) * this.radius) / 5;\r\n    this.vel.limit(this.radius * 0.5);\r\n    this.edge();\r\n\r\n    this.pos = this.pos.add(this.vel);\r\n\r\n    this.counter += 1;\r\n    if (this.counter >= this.maxCounter) {\r\n      this.counter = 0;\r\n    }\r\n    if (this.infected) {\r\n      this.infectedCounter += 1;\r\n      if (this.infectedCounter >= incubationPeriod) {\r\n        this.infected = false;\r\n        this.recovered = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.strokeWeight(this.size / 2);\r\n    if (!this.infected) {\r\n      this.p.stroke(255, 255, 255, 200);\r\n    } else if (this.infected) {\r\n      this.p.stroke(255, 0, 0, 200);\r\n    } else if (this.recovered) {\r\n      this.p.stroke(0, 255, 0, 200);\r\n    }\r\n    this.p.point(this.pos);\r\n    this.p.pop();\r\n\r\n    if (this.infected) {\r\n      this.p.stroke(255, 0, 0, 150);\r\n      this.p.noFill();\r\n      let blipSize = this.p.map(this.counter, 0, this.maxCounter, 0, this.maxRange);\r\n      this.p.ellipse(this.pos.x, this.pos.y, blipSize);\r\n    }\r\n  }\r\n}\r\n","export class Population {\r\n  constructor(people, sketch) {\r\n    this.p = sketch;\r\n    this.people = people;\r\n    this.infected = this.people.filter((person) => person.infected);\r\n    this.healthy = this.people.filter((person) => !person.infected && !person.recovered);\r\n    this.recovered = this.people.filter((person) => person.recovered);\r\n  }\r\n\r\n  updatePeople() {\r\n    this.people.forEach((person) => {\r\n      person.update();\r\n    });\r\n  }\r\n\r\n  updateCount() {\r\n    this.infected = this.people.filter((person) => person.infected);\r\n    this.healthy = this.people.filter((person) => !person.infected && !person.recovered);\r\n    this.recovered = this.people.filter((person) => person.recovered);\r\n  }\r\n\r\n  show() {\r\n    this.p.push();\r\n    this.p.strokeWeight(this.people[0].size <= 3 ? 3 : this.people[0].size);\r\n\r\n    this.p.stroke(255, 255, 255);\r\n    this.healthy.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.stroke(0, 255, 0);\r\n    this.recovered.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.stroke(255, 0, 0);\r\n    this.infected.forEach((person) => this.p.point(person.pos));\r\n\r\n    this.p.strokeWeight(1);\r\n    this.p.stroke(255, 0, 0);\r\n    this.p.noFill();\r\n    this.infected.forEach((person) => {\r\n      // let blipSize = Math.\r\n      let blipSize = this.p.map(person.counter, 0, person.maxCounter, 0, person.maxRange);\r\n      this.p.circle(person.pos.x, person.pos.y, blipSize);\r\n    });\r\n\r\n    this.p.pop();\r\n  }\r\n}\r\n","import { Rectangle, QuadTree } from \"../components/QuadTree\";\r\nimport { Person } from \"../components/Person\";\r\nimport { Population } from \"../components/Population\";\r\n\r\nexport default function SimpleTransmission(p) {\r\n  let people = [];\r\n  let population;\r\n  let size;\r\n  let qtree;\r\n  let data;\r\n  let updateState;\r\n\r\n  p.disableFriendlyErrors = true;\r\n\r\n  function updateData(population) {\r\n    if (data) {\r\n      updateState([\r\n        ...data,\r\n        {\r\n          healthy: population.healthy.length,\r\n          infected: population.infected.length,\r\n          recovered: population.recovered.length\r\n        }\r\n      ]);\r\n    }\r\n  }\r\n\r\n  p.PropsHandler = function (props) {\r\n    data = props.data;\r\n    updateState = props.updateData;\r\n  };\r\n\r\n  p.setup = function () {\r\n    size = Math.floor(Math.min(p.windowWidth * 0.92, 400));\r\n\r\n    p.createCanvas(size, size);\r\n    p.randomSeed(92);\r\n    for (let i = 1; i < 500; i++) {\r\n      people.push(new Person(p));\r\n    }\r\n    people.push(new Person(p, true));\r\n    population = new Population(people, p);\r\n    population.updateCount();\r\n\r\n    updateData(population);\r\n  };\r\n\r\n  p.draw = function () {\r\n    p.background(0);\r\n\r\n    qtree = new QuadTree(new Rectangle(p.width / 2, p.height / 2, p.width, p), 4, p);\r\n\r\n    population.healthy.forEach((person) => qtree.insert(person));\r\n\r\n    population.infected.forEach((person) => {\r\n      let boundingBox = new Rectangle(person.pos.x, person.pos.y, person.maxRange, p);\r\n      let neighbours = qtree.query(boundingBox);\r\n\r\n      if (neighbours.length !== 0) {\r\n        neighbours.forEach((neighbour) => {\r\n          person.isClose(neighbour);\r\n        });\r\n      }\r\n    });\r\n\r\n    population.updatePeople();\r\n    population.updateCount();\r\n    updateData(population);\r\n    population.show();\r\n\r\n    p.push();\r\n    const xc = Math.floor(p.width * 0.01);\r\n    const yc = Math.floor(p.height * 0.01);\r\n    const fontSize = Math.floor(p.height * 0.03);\r\n    const yOffset = Math.floor(fontSize * 1.3);\r\n    const xOffset = fontSize * 3;\r\n    const pointSize = Math.floor(fontSize * 0.75);\r\n    p.fill(200, 200, 200, 200);\r\n    p.rect(xc, yc, fontSize * 10, yOffset * 3.5, p.width * 0.01);\r\n\r\n    p.fill(0);\r\n    p.textSize(fontSize);\r\n    p.text(\"Susceptible\", xc + xOffset, yc + yOffset);\r\n    p.text(\"Infectious\", xc + xOffset, yc + yOffset * 2);\r\n    p.text(\"Recovered\", xc + xOffset, yc + yOffset * 3);\r\n\r\n    p.strokeWeight(pointSize);\r\n    p.stroke(255, 255, 255);\r\n    p.point(xc + xOffset / 2, yc + yOffset - pointSize / 2);\r\n    p.stroke(255, 0, 0);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 2 - pointSize / 2);\r\n    p.stroke(0, 255, 0);\r\n    p.point(xc + xOffset / 2, yc + yOffset * 3 - pointSize / 2);\r\n    p.pop();\r\n\r\n    // if (p.frameCount % 20 === 0) {\r\n    //   updateData(population);\r\n    // }\r\n  };\r\n}\r\n","class linePlot {\r\n  constructor(sketch) {\r\n    this.p = sketch;\r\n    this.count = 0;\r\n    this.offset = 10;\r\n    this.plotHeight = this.p.height - this.offset * 2;\r\n    this.plotWidth = this.p.width - this.offset * 2;\r\n    this.plotBar = this.plotWidth / 100;\r\n  }\r\n\r\n  plot(array, maxCount, color) {\r\n    const p = this.p;\r\n    const data = array;\r\n    let y1, y2;\r\n    let modifiedData = [];\r\n\r\n    for (let x = 0; x < 100; x++) {\r\n      modifiedData.push([]);\r\n    }\r\n\r\n    const stepSize = data.length / 100;\r\n\r\n    for (let i = 0; i < modifiedData.length; i++) {\r\n      modifiedData[i] = data[Math.floor(i * stepSize)];\r\n    }\r\n\r\n    p.push();\r\n    p.translate(this.offset, p.height - this.offset);\r\n    p.scale(1, -1);\r\n    if (color === \"white\") {\r\n      p.fill(255);\r\n      p.stroke(255);\r\n    } else if (color === \"red\") {\r\n      p.fill(255, 0, 0);\r\n      p.stroke(255, 0, 0);\r\n    } else if (color === \"green\") {\r\n      p.fill(0, 255, 0);\r\n      p.stroke(0, 255, 0);\r\n    }\r\n\r\n    // modifiedData = modifiedData.filter((x) => x);\r\n    for (let i = 0; i < modifiedData.length - 1; i++) {\r\n      y1 = (modifiedData[i] / maxCount) * (this.plotHeight * 0.9);\r\n      y2 = (modifiedData[i + 1] / maxCount) * (this.plotHeight * 0.9);\r\n\r\n      p.quad(i * this.plotBar, 0, i * this.plotBar + this.plotBar, 0, i * this.plotBar + this.plotBar, y2, i * this.plotBar, y1);\r\n    }\r\n\r\n    p.pop();\r\n  }\r\n\r\n  show() {\r\n    const p = this.p;\r\n    p.push();\r\n    p.fill(255);\r\n    p.stroke(255);\r\n    p.translate(this.offset, p.height - this.offset);\r\n    p.scale(1, -1);\r\n    p.line(0, 0, 0, this.plotHeight);\r\n    p.line(0, 0, this.plotWidth, 0);\r\n\r\n    p.pop();\r\n  }\r\n}\r\n\r\nexport default function Plot(p) {\r\n  let size;\r\n  let data;\r\n  let plot;\r\n\r\n  p.disableFriendlyErrors = true;\r\n\r\n  p.PropsHandler = function (props) {\r\n    data = props.data;\r\n  };\r\n\r\n  p.setup = function () {\r\n    // p.frameRate(5);\r\n    size = Math.floor(Math.min(p.windowWidth * 0.92, 400));\r\n    p.createCanvas(size, size / 3);\r\n    plot = new linePlot(p);\r\n  };\r\n\r\n  p.draw = function () {\r\n    let healthy = data.map((x) => x.healthy);\r\n    let infected = data.map((x) => x.infected);\r\n    let recovered = data.map((x) => x.recovered);\r\n    p.background(0);\r\n    plot.show();\r\n    plot.plot(healthy, 500, \"white\");\r\n    plot.plot(infected, 500, \"red\");\r\n\r\n    if (infected[infected.length - 1] === 0) {\r\n      p.noLoop();\r\n    }\r\n  };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport P5Wrapper from \"./sketches/P5Wrapper\";\r\nimport simpleTransmission from \"./sketches/SimpleTransmission/SimpleTransmission\";\r\nimport Plot from \"./sketches/components/Plot\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function SketchBody(props) {\r\n  const [state, setState] = useState([]);\r\n\r\n  return (\r\n    <Grid container justify=\"center\">\r\n      <Grid item>\r\n        <P5Wrapper sketch={simpleTransmission} data={state} updateData={setState} />\r\n        <P5Wrapper sketch={Plot} data={state} />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid, Divider, Typography, Card, CardContent } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SketchBody from \"../../SketchBody\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  sketchMobile: {\r\n    width: \"100%\"\r\n  }\r\n}));\r\n\r\nexport function Article(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Grid item xs={12} md={7}>\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" gutterBottom>\r\n              How a Virus Spreads\r\n            </Typography>\r\n            <Divider />\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              Epidemiologist models how viruses spread to people using a Susceptible, Infectious & Recovered (SIR) Model. In this model, we have three groups of\r\n              people:\r\n            </Typography>\r\n            <ul>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Susceptible: Healthy people who have not been infected by a virus\r\n                </Typography>\r\n              </li>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Infectious: People who are already infected by a virus\r\n                </Typography>\r\n              </li>\r\n              <li>\r\n                <Typography variant=\"body2\" paragraph>\r\n                  Recovered: People who were infected and now has either recovered or -unfortunately- died\r\n                </Typography>\r\n              </li>\r\n            </ul>\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              The SIR models has three interactions. (1) Susceptible people interact with infectious people and have a chance to contract the disease. (2)\r\n              Infectious people will slowly recover, the rate at which they recover is dependant on the level of medical care available. Lastly (3) Recovered\r\n              people can no longer transmit the disease because they have gained immunity against the disease.\r\n            </Typography>\r\n            <Typography align=\"justify\" variant=\"body2\" paragraph>\r\n              Below we have a simple simulation of a disease spreading in a population with no mitigating factors at all. We can see how quickly the disease\r\n              spreads to the whole population.\r\n            </Typography>\r\n            <SketchBody />\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport { Article } from \"./components/Article/Article\";\r\n\r\nexport default function AnalysisBody() {\r\n  return (\r\n    <Grid container direction=\"column\" alignContent=\"center\" style={{ marginTop: \"5px\" }} spacing={3}>\r\n      <Article />\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport TimeSeriesBody from \"./TimeSeriesBody\";\r\nimport AnalysisBody from \"./AnalysisBody\";\r\nimport SketchBody from \"./SketchBody\";\r\nimport { NavBar, SideBar } from \"./components\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { makeStyles, CssBaseline } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\"\r\n  }\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <div className={classes.root}>\r\n        <CssBaseline />\r\n        <NavBar handleOpen={handleDrawerOpen} handleClose={handleDrawerClose} open={open} />\r\n        <SideBar handleOpen={handleDrawerOpen} handleClose={handleDrawerClose} open={open} />\r\n\r\n        <main style={{ width: \"100%\", backgroundColor: \"rgb(240,240,240)\" }} onClick={open ? handleDrawerClose : null}>\r\n          <div className={classes.drawerHeader} />\r\n          <Switch>\r\n            <Route path=\"/\" exact component={TimeSeriesBody} />\r\n            <Route path=\"/analysis\" component={AnalysisBody} />\r\n            <Route path=\"/sketch\" component={SketchBody} size={100} />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"infected\":\"Cards_infected__MaZs5\",\"recovered\":\"Cards_recovered__2EChl\",\"deaths\":\"Cards_deaths__guyns\",\"counter\":\"Cards_counter__1dl8E\",\"confirmedDelta\":\"Cards_confirmedDelta__3Mvqg\",\"recoveredDelta\":\"Cards_recoveredDelta__10T_e\",\"deathsDelta\":\"Cards_deathsDelta__2DGH5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gridContainer\":\"CountryPicker_gridContainer__3GS8J\",\"buttonLocation\":\"CountryPicker_buttonLocation__22lws\",\"formControl\":\"CountryPicker_formControl__26lxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__31DQU\"};"],"sourceRoot":""}